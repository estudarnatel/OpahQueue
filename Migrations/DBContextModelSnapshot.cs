// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpahQueue.Data;

#nullable disable

namespace OpahQueue.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            // modelBuilder.Entity("OpahQueue.Models.Exceller", b =>
            //     {
            //         b.Property<int>("Id")
            //             .ValueGeneratedOnAdd()
            //             .HasColumnType("int");

            //         SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

            //         b.Property<DateTime>("Datetime")
            //             .HasColumnType("datetime2");

            //         b.Property<string>("Protocol")
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<string>("Status")
            //             .IsRequired()
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<int>("UserId")
            //             .HasColumnType("int");

            //         b.HasKey("Id");

            //         b.ToTable("Exceller");
            //     });

            // modelBuilder.Entity("OpahQueue.Models.Image", b =>
            //     {
            //         b.Property<int>("Id")
            //             .ValueGeneratedOnAdd()
            //             .HasColumnType("int");

            //         SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

            //         b.Property<byte[]>("ImageData")
            //             .IsRequired()
            //             .HasColumnType("varbinary(max)");

            //         b.Property<string>("ImageStatus")
            //             .IsRequired()
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<string>("ImageTitle")
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<int>("UserId")
            //             .HasColumnType("int");

            //         b.HasKey("Id");

            //         b.ToTable("Images");
            //     });

            // modelBuilder.Entity("OpahQueue.Models.TIatende", b =>
            //     {
            //         b.Property<int>("Id")
            //             .ValueGeneratedOnAdd()
            //             .HasColumnType("int");

            //         SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

            //         b.Property<string>("Called")
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<DateTime>("Datetime")
            //             .HasColumnType("datetime2");

            //         b.Property<string>("Status")
            //             .IsRequired()
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<int>("UserId")
            //             .HasColumnType("int");

            //         b.HasKey("Id");

            //         b.ToTable("TIatende");
            //     });

            // modelBuilder.Entity("OpahQueue.Models.User", b =>
            //     {
            //         b.Property<long>("Id")
            //             .ValueGeneratedOnAdd()
            //             .HasColumnType("bigint");

            //         SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

            //         b.Property<bool>("IsItInTheQueue")
            //             .HasColumnType("bit");

            //         b.Property<DateTime>("LastConn")
            //             .HasColumnType("datetime2");

            //         b.Property<string>("Name")
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<string>("Password")
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<int>("Position")
            //             .HasColumnType("int");

            //         b.Property<string>("UserStatus")
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<string>("Username")
            //             .HasColumnType("nvarchar(max)");

            //         b.Property<bool>("WorkStatus")
            //             .HasColumnType("bit");

            //         b.HasKey("Id");

            //         b.ToTable("Users");
            //     });

            modelBuilder.Entity("OpahQueue.Models.Report", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExcellerDaily")
                        .HasColumnType("int");

                    b.Property<int>("ExcellerMonthly")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TIatendeDaily")
                        .HasColumnType("int");

                    b.Property<int>("TIatendeMonthly")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });
            
#pragma warning restore 612, 618
        }
    }
}
